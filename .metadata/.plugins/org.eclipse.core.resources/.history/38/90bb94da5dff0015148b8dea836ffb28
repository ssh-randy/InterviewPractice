package listStuff;

public class LinkedListRecursive<T> implements List<T> {

	private ListCell<T> head;
	
	public LinkedListRecursive(){
		head = null;
	}
	
	public void insert(T element) {
		head = new ListCell<T>(element, head);
	}

	public void delete(T element) {
		delete(element, head);
		
	}
	
	//helper function recursive delete
	private ListCell<T> delete(T element, ListCell<T> lc) {
		if(lc == null) return lc;
		if(lc.getDatum().equals(element)) return lc.getNext();
		lc.setNext(delete(element, lc));
		
		return lc;
	}

	public boolean contains(T element) {
		return recursiveContains(element, head);
	}
	
	public boolean recursiveContains(T element, ListCell<T> lc) {
		if(lc == null) return false;
		else if(lc.getDatum().equals(element)) return true;
		else return recursiveContains(element, lc.getNext());
	}

	public int size() {
		// TODO Auto-generated method stub
		return 0;
	}



	
}
